# generated by datamodel-codegen:
#   filename:  workdir/storage_gcp_upbound_io_v1beta1_bucket.yaml

from __future__ import annotations

from enum import Enum
from typing import Dict, List, Optional

from pydantic import AwareDatetime, BaseModel, Field

from .....k8s.apimachinery.pkg.apis.meta import v1


class DeletionPolicy(Enum):
    Orphan = 'Orphan'
    Delete = 'Delete'


class Autoclas(BaseModel):
    enabled: Optional[bool] = None
    """
    While set to true, autoclass automatically transitions objects in your bucket to appropriate storage classes based on each object's access pattern.
    """
    terminalStorageClass: Optional[str] = None
    """
    The storage class that objects in the bucket eventually transition to if they are not read for a certain length of time. Supported values include: NEARLINE, ARCHIVE.
    """


class Cor(BaseModel):
    maxAgeSeconds: Optional[float] = None
    """
    The value, in seconds, to return in the Access-Control-Max-Age header used in preflight responses.
    """
    method: Optional[List[str]] = None
    """
    The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
    """
    origin: Optional[List[str]] = None
    """
    The list of Origins eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
    """
    responseHeader: Optional[List[str]] = None
    """
    The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
    """


class CustomPlacementConfigItem(BaseModel):
    dataLocations: Optional[List[str]] = None
    """
    The list of individual regions that comprise a dual-region bucket. See Cloud Storage bucket locations for a list of acceptable regions. Note: If any of the data_locations changes, it will recreate the bucket.
    """


class EncryptionItem(BaseModel):
    defaultKmsKeyName: Optional[str] = None
    """
    : The id of a Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.
    You must pay attention to whether the crypto key is available in the location that this bucket is created in.
    See the docs for more details.
    """


class ActionItem(BaseModel):
    storageClass: Optional[str] = None
    """
    The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.
    """
    type: Optional[str] = None
    """
    The type of the action of this Lifecycle Rule. Supported values include: Delete, SetStorageClass and AbortIncompleteMultipartUpload.
    """


class ConditionItem(BaseModel):
    age: Optional[float] = None
    """
    Minimum age of an object in days to satisfy this condition.
    """
    createdBefore: Optional[str] = None
    """
    A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when an object is created before midnight of the specified date in UTC.
    """
    customTimeBefore: Optional[str] = None
    """
    A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when the customTime metadata for the object is set to an earlier date than the date used in this lifecycle condition.
    """
    daysSinceCustomTime: Optional[float] = None
    """
    Days since the date set in the customTime metadata for the object. This condition is satisfied when the current date and time is at least the specified number of days after the customTime.
    """
    daysSinceNoncurrentTime: Optional[float] = None
    """
    Relevant only for versioned objects. Number of days elapsed since the noncurrent timestamp of an object.
    """
    matchesPrefix: Optional[List[str]] = None
    """
    One or more matching name prefixes to satisfy this condition.
    """
    matchesStorageClass: Optional[List[str]] = None
    """
    Storage Class of objects to satisfy this condition. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, DURABLE_REDUCED_AVAILABILITY.
    """
    matchesSuffix: Optional[List[str]] = None
    """
    One or more matching name suffixes to satisfy this condition.
    """
    noAge: Optional[bool] = None
    """
    While set true, age value will be omitted. Note Required to set true when age is unset in the config file.
    """
    noncurrentTimeBefore: Optional[str] = None
    """
    Relevant only for versioned objects. The date in RFC 3339 (e.g. 2017-06-13) when the object became nonconcurrent.
    """
    numNewerVersions: Optional[float] = None
    """
    Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
    """
    sendDaysSinceCustomTimeIfZero: Optional[bool] = None
    """
    While set true, days_since_custom_time value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the days_since_custom_time field. It can be used alone or together with days_since_custom_time.
    """
    sendDaysSinceNoncurrentTimeIfZero: Optional[bool] = None
    """
    While set true, days_since_noncurrent_time value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the days_since_noncurrent_time field. It can be used alone or together with days_since_noncurrent_time.
    """
    sendNumNewerVersionsIfZero: Optional[bool] = None
    """
    While set true, num_newer_versions value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the num_newer_versions field. It can be used alone or together with num_newer_versions.
    """
    withState: Optional[str] = None
    """
    Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: "LIVE", "ARCHIVED", "ANY".
    """


class LifecycleRuleItem(BaseModel):
    action: Optional[List[ActionItem]] = None
    """
    The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
    """
    condition: Optional[List[ConditionItem]] = None
    """
    The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
    """


class LoggingItem(BaseModel):
    logBucket: Optional[str] = None
    """
    The bucket that will receive log objects.
    """
    logObjectPrefix: Optional[str] = None
    """
    The object prefix for log objects. If it's not provided,
    by default GCS sets this to this bucket's name.
    """


class RetentionPolicyItem(BaseModel):
    isLocked: Optional[bool] = None
    """
    If set to true, the bucket will be locked and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
    """
    retentionPeriod: Optional[float] = None
    """
    The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 2,147,483,647 seconds.
    """


class SoftDeletePolicyItem(BaseModel):
    retentionDurationSeconds: Optional[float] = None
    """
    The duration in seconds that soft-deleted objects in the bucket will be retained and cannot be permanently deleted. Default value is 604800. The value must be in between 604800(7 days) and 7776000(90 days). Note: To disable the soft delete policy on a bucket, This field must be set to 0.
    """


class VersioningItem(BaseModel):
    enabled: Optional[bool] = None
    """
    While set to true, versioning is fully enabled for this bucket.
    """


class WebsiteItem(BaseModel):
    mainPageSuffix: Optional[str] = None
    """
    Behaves as the bucket's directory index where
    missing objects are treated as potential directories.
    """
    notFoundPage: Optional[str] = None
    """
    The custom object to return when a requested
    resource is not found.
    """


class ForProvider(BaseModel):
    autoclass: Optional[List[Autoclas]] = None
    """
    The bucket's Autoclass configuration.  Structure is documented below.
    """
    cors: Optional[List[Cor]] = None
    """
    The bucket's Cross-Origin Resource Sharing (CORS) configuration. Multiple blocks of this type are permitted. Structure is documented below.
    """
    customPlacementConfig: Optional[List[CustomPlacementConfigItem]] = None
    """
    The bucket's custom location configuration, which specifies the individual regions that comprise a dual-region bucket. If the bucket is designated a single or multi-region, the parameters are empty. Structure is documented below.
    """
    defaultEventBasedHold: Optional[bool] = None
    """
    Whether or not to automatically apply an eventBasedHold to new objects added to the bucket.
    """
    enableObjectRetention: Optional[bool] = None
    """
    Enables object retention on a storage bucket.
    """
    encryption: Optional[List[EncryptionItem]] = None
    """
    The bucket's encryption configuration. Structure is documented below.
    """
    forceDestroy: Optional[bool] = None
    """
    When deleting a bucket, this
    boolean option will delete all contained objects.
    """
    labels: Optional[Dict[str, str]] = None
    """
    A map of key/value label pairs to assign to the bucket.
    """
    lifecycleRule: Optional[List[LifecycleRuleItem]] = None
    """
    The bucket's Lifecycle Rules configuration. Multiple blocks of this type are permitted. Structure is documented below.
    """
    location: Optional[str] = None
    """
    The GCS location.
    """
    logging: Optional[List[LoggingItem]] = None
    """
    The bucket's Access & Storage Logs configuration. Structure is documented below.
    """
    project: Optional[str] = None
    """
    The ID of the project in which the resource belongs. If it
    is not provided, the provider project is used.
    """
    publicAccessPrevention: Optional[str] = None
    """
    Prevents public access to a bucket. Acceptable values are "inherited" or "enforced". If "inherited", the bucket uses public access prevention. only if the bucket is subject to the public access prevention organization policy constraint. Defaults to "inherited".
    """
    requesterPays: Optional[bool] = None
    """
    Enables Requester Pays on a storage bucket.
    """
    retentionPolicy: Optional[List[RetentionPolicyItem]] = None
    """
    Configuration of the bucket's data retention policy for how long objects in the bucket should be retained. Structure is documented below.
    """
    rpo: Optional[str] = None
    """
    The recovery point objective for cross-region replication of the bucket. Applicable only for dual and multi-region buckets. "DEFAULT" sets default replication. "ASYNC_TURBO" value enables turbo replication, valid for dual-region buckets only. See Turbo Replication for more information. If rpo is not specified at bucket creation, it defaults to "DEFAULT" for dual and multi-region buckets. NOTE If used with single-region bucket, It will throw an error.
    """
    softDeletePolicy: Optional[List[SoftDeletePolicyItem]] = None
    """
    The bucket's soft delete policy, which defines the period of time that soft-deleted objects will be retained, and cannot be permanently deleted. Structure is documented below.
    """
    storageClass: Optional[str] = None
    """
    The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.
    """
    uniformBucketLevelAccess: Optional[bool] = None
    """
    Enables Uniform bucket-level access access to a bucket.
    """
    versioning: Optional[List[VersioningItem]] = None
    """
    The bucket's Versioning configuration.  Structure is documented below.
    """
    website: Optional[List[WebsiteItem]] = None
    """
    Configuration if the bucket acts as a website. Structure is documented below.
    """


class InitProvider(BaseModel):
    autoclass: Optional[List[Autoclas]] = None
    """
    The bucket's Autoclass configuration.  Structure is documented below.
    """
    cors: Optional[List[Cor]] = None
    """
    The bucket's Cross-Origin Resource Sharing (CORS) configuration. Multiple blocks of this type are permitted. Structure is documented below.
    """
    customPlacementConfig: Optional[List[CustomPlacementConfigItem]] = None
    """
    The bucket's custom location configuration, which specifies the individual regions that comprise a dual-region bucket. If the bucket is designated a single or multi-region, the parameters are empty. Structure is documented below.
    """
    defaultEventBasedHold: Optional[bool] = None
    """
    Whether or not to automatically apply an eventBasedHold to new objects added to the bucket.
    """
    enableObjectRetention: Optional[bool] = None
    """
    Enables object retention on a storage bucket.
    """
    encryption: Optional[List[EncryptionItem]] = None
    """
    The bucket's encryption configuration. Structure is documented below.
    """
    forceDestroy: Optional[bool] = None
    """
    When deleting a bucket, this
    boolean option will delete all contained objects.
    """
    labels: Optional[Dict[str, str]] = None
    """
    A map of key/value label pairs to assign to the bucket.
    """
    lifecycleRule: Optional[List[LifecycleRuleItem]] = None
    """
    The bucket's Lifecycle Rules configuration. Multiple blocks of this type are permitted. Structure is documented below.
    """
    location: Optional[str] = None
    """
    The GCS location.
    """
    logging: Optional[List[LoggingItem]] = None
    """
    The bucket's Access & Storage Logs configuration. Structure is documented below.
    """
    project: Optional[str] = None
    """
    The ID of the project in which the resource belongs. If it
    is not provided, the provider project is used.
    """
    publicAccessPrevention: Optional[str] = None
    """
    Prevents public access to a bucket. Acceptable values are "inherited" or "enforced". If "inherited", the bucket uses public access prevention. only if the bucket is subject to the public access prevention organization policy constraint. Defaults to "inherited".
    """
    requesterPays: Optional[bool] = None
    """
    Enables Requester Pays on a storage bucket.
    """
    retentionPolicy: Optional[List[RetentionPolicyItem]] = None
    """
    Configuration of the bucket's data retention policy for how long objects in the bucket should be retained. Structure is documented below.
    """
    rpo: Optional[str] = None
    """
    The recovery point objective for cross-region replication of the bucket. Applicable only for dual and multi-region buckets. "DEFAULT" sets default replication. "ASYNC_TURBO" value enables turbo replication, valid for dual-region buckets only. See Turbo Replication for more information. If rpo is not specified at bucket creation, it defaults to "DEFAULT" for dual and multi-region buckets. NOTE If used with single-region bucket, It will throw an error.
    """
    softDeletePolicy: Optional[List[SoftDeletePolicyItem]] = None
    """
    The bucket's soft delete policy, which defines the period of time that soft-deleted objects will be retained, and cannot be permanently deleted. Structure is documented below.
    """
    storageClass: Optional[str] = None
    """
    The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.
    """
    uniformBucketLevelAccess: Optional[bool] = None
    """
    Enables Uniform bucket-level access access to a bucket.
    """
    versioning: Optional[List[VersioningItem]] = None
    """
    The bucket's Versioning configuration.  Structure is documented below.
    """
    website: Optional[List[WebsiteItem]] = None
    """
    Configuration if the bucket acts as a website. Structure is documented below.
    """


class ManagementPolicy(Enum):
    Observe = 'Observe'
    Create = 'Create'
    Update = 'Update'
    Delete = 'Delete'
    LateInitialize = 'LateInitialize'
    field_ = '*'


class Resolution(Enum):
    Required = 'Required'
    Optional = 'Optional'


class Resolve(Enum):
    Always = 'Always'
    IfNotPresent = 'IfNotPresent'


class Policy(BaseModel):
    resolution: Optional[Resolution] = 'Required'
    """
    Resolution specifies whether resolution of this reference is required.
    The default is 'Required', which means the reconcile will fail if the
    reference cannot be resolved. 'Optional' means this reference will be
    a no-op if it cannot be resolved.
    """
    resolve: Optional[Resolve] = None
    """
    Resolve specifies when this reference should be resolved. The default
    is 'IfNotPresent', which will attempt to resolve the reference only when
    the corresponding field is not present. Use 'Always' to resolve the
    reference on every reconcile.
    """


class ProviderConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class Metadata(BaseModel):
    annotations: Optional[Dict[str, str]] = None
    """
    Annotations are the annotations to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.annotations".
    - It is up to Secret Store implementation for others store types.
    """
    labels: Optional[Dict[str, str]] = None
    """
    Labels are the labels/tags to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.labels".
    - It is up to Secret Store implementation for others store types.
    """
    type: Optional[str] = None
    """
    Type is the SecretType for the connection secret.
    - Only valid for Kubernetes Secret Stores.
    """


class PublishConnectionDetailsTo(BaseModel):
    configRef: Optional[ConfigRef] = Field(
        default_factory=lambda: ConfigRef.model_validate({'name': 'default'})
    )
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.
    """
    metadata: Optional[Metadata] = None
    """
    Metadata is the metadata for connection secret.
    """
    name: str
    """
    Name is the name of the connection secret.
    """


class WriteConnectionSecretToRef(BaseModel):
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class Spec(BaseModel):
    deletionPolicy: Optional[DeletionPolicy] = 'Delete'
    """
    DeletionPolicy specifies what will happen to the underlying external
    when this managed resource is deleted - either "Delete" or "Orphan" the
    external resource.
    This field is planned to be deprecated in favor of the ManagementPolicies
    field in a future release. Currently, both could be set independently and
    non-default values would be honored if the feature flag is enabled.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    """
    forProvider: ForProvider
    initProvider: Optional[InitProvider] = None
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.
    """
    managementPolicies: Optional[List[ManagementPolicy]] = ['*']
    """
    THIS IS A BETA FIELD. It is on by default but can be opted out
    through a Crossplane feature flag.
    ManagementPolicies specify the array of actions Crossplane is allowed to
    take on the managed and external resources.
    This field is planned to replace the DeletionPolicy field in a future
    release. Currently, both could be set independently and non-default
    values would be honored if the feature flag is enabled. If both are
    custom, the DeletionPolicy field will be ignored.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    """
    providerConfigRef: Optional[ProviderConfigRef] = Field(
        default_factory=lambda: ProviderConfigRef.model_validate({'name': 'default'})
    )
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.
    """
    publishConnectionDetailsTo: Optional[PublishConnectionDetailsTo] = None
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    """
    writeConnectionSecretToRef: Optional[WriteConnectionSecretToRef] = None
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.
    """


class SoftDeletePolicyItemModel(BaseModel):
    effectiveTime: Optional[str] = None
    """
    (Computed) Server-determined value that indicates the time from which the policy, or one with a greater retention, was effective. This value is in RFC 3339 format.
    """
    retentionDurationSeconds: Optional[float] = None
    """
    The duration in seconds that soft-deleted objects in the bucket will be retained and cannot be permanently deleted. Default value is 604800. The value must be in between 604800(7 days) and 7776000(90 days). Note: To disable the soft delete policy on a bucket, This field must be set to 0.
    """


class AtProvider(BaseModel):
    autoclass: Optional[List[Autoclas]] = None
    """
    The bucket's Autoclass configuration.  Structure is documented below.
    """
    cors: Optional[List[Cor]] = None
    """
    The bucket's Cross-Origin Resource Sharing (CORS) configuration. Multiple blocks of this type are permitted. Structure is documented below.
    """
    customPlacementConfig: Optional[List[CustomPlacementConfigItem]] = None
    """
    The bucket's custom location configuration, which specifies the individual regions that comprise a dual-region bucket. If the bucket is designated a single or multi-region, the parameters are empty. Structure is documented below.
    """
    defaultEventBasedHold: Optional[bool] = None
    """
    Whether or not to automatically apply an eventBasedHold to new objects added to the bucket.
    """
    effectiveLabels: Optional[Dict[str, str]] = None
    """
    A map of key/value label pairs to assign to the bucket.
    """
    enableObjectRetention: Optional[bool] = None
    """
    Enables object retention on a storage bucket.
    """
    encryption: Optional[List[EncryptionItem]] = None
    """
    The bucket's encryption configuration. Structure is documented below.
    """
    forceDestroy: Optional[bool] = None
    """
    When deleting a bucket, this
    boolean option will delete all contained objects.
    """
    id: Optional[str] = None
    labels: Optional[Dict[str, str]] = None
    """
    A map of key/value label pairs to assign to the bucket.
    """
    lifecycleRule: Optional[List[LifecycleRuleItem]] = None
    """
    The bucket's Lifecycle Rules configuration. Multiple blocks of this type are permitted. Structure is documented below.
    """
    location: Optional[str] = None
    """
    The GCS location.
    """
    logging: Optional[List[LoggingItem]] = None
    """
    The bucket's Access & Storage Logs configuration. Structure is documented below.
    """
    project: Optional[str] = None
    """
    The ID of the project in which the resource belongs. If it
    is not provided, the provider project is used.
    """
    projectNumber: Optional[float] = None
    publicAccessPrevention: Optional[str] = None
    """
    Prevents public access to a bucket. Acceptable values are "inherited" or "enforced". If "inherited", the bucket uses public access prevention. only if the bucket is subject to the public access prevention organization policy constraint. Defaults to "inherited".
    """
    requesterPays: Optional[bool] = None
    """
    Enables Requester Pays on a storage bucket.
    """
    retentionPolicy: Optional[List[RetentionPolicyItem]] = None
    """
    Configuration of the bucket's data retention policy for how long objects in the bucket should be retained. Structure is documented below.
    """
    rpo: Optional[str] = None
    """
    The recovery point objective for cross-region replication of the bucket. Applicable only for dual and multi-region buckets. "DEFAULT" sets default replication. "ASYNC_TURBO" value enables turbo replication, valid for dual-region buckets only. See Turbo Replication for more information. If rpo is not specified at bucket creation, it defaults to "DEFAULT" for dual and multi-region buckets. NOTE If used with single-region bucket, It will throw an error.
    """
    selfLink: Optional[str] = None
    """
    The URI of the created resource.
    """
    softDeletePolicy: Optional[List[SoftDeletePolicyItemModel]] = None
    """
    The bucket's soft delete policy, which defines the period of time that soft-deleted objects will be retained, and cannot be permanently deleted. Structure is documented below.
    """
    storageClass: Optional[str] = None
    """
    The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.
    """
    terraformLabels: Optional[Dict[str, str]] = None
    """
    A map of key/value label pairs to assign to the bucket.
    """
    uniformBucketLevelAccess: Optional[bool] = None
    """
    Enables Uniform bucket-level access access to a bucket.
    """
    url: Optional[str] = None
    """
    The base URL of the bucket, in the format gs://<bucket-name>.
    """
    versioning: Optional[List[VersioningItem]] = None
    """
    The bucket's Versioning configuration.  Structure is documented below.
    """
    website: Optional[List[WebsiteItem]] = None
    """
    Configuration if the bucket acts as a website. Structure is documented below.
    """


class Condition(BaseModel):
    lastTransitionTime: AwareDatetime
    """
    LastTransitionTime is the last time this condition transitioned from one
    status to another.
    """
    message: Optional[str] = None
    """
    A Message containing details about this condition's last transition from
    one status to another, if any.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration represents the .metadata.generation that the condition was set based upon.
    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
    with respect to the current state of the instance.
    """
    reason: str
    """
    A Reason for this condition's last transition from one status to another.
    """
    status: str
    """
    Status of this condition; is it currently True, False, or Unknown?
    """
    type: str
    """
    Type of this condition. At most one of each condition type may apply to
    a resource at any point in time.
    """


class Status(BaseModel):
    atProvider: Optional[AtProvider] = None
    conditions: Optional[List[Condition]] = None
    """
    Conditions of the resource.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration is the latest metadata.generation
    which resulted in either a ready state, or stalled due to error
    it can not recover from without human intervention.
    """


class Bucket(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ObjectMeta] = None
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    """
    spec: Spec
    """
    BucketSpec defines the desired state of Bucket
    """
    status: Optional[Status] = None
    """
    BucketStatus defines the observed state of Bucket.
    """


class BucketList(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    items: List[Bucket]
    """
    List of buckets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ListMeta] = None
    """
    Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """