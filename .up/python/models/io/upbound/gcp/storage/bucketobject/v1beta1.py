# generated by datamodel-codegen:
#   filename:  workdir/storage_gcp_upbound_io_v1beta1_bucketobject.yaml

from __future__ import annotations

from enum import Enum
from typing import Dict, List, Optional

from pydantic import AwareDatetime, BaseModel, Field

from .....k8s.apimachinery.pkg.apis.meta import v1


class DeletionPolicy(Enum):
    Orphan = 'Orphan'
    Delete = 'Delete'


class Resolution(Enum):
    Required = 'Required'
    Optional = 'Optional'


class Resolve(Enum):
    Always = 'Always'
    IfNotPresent = 'IfNotPresent'


class Policy(BaseModel):
    resolution: Optional[Resolution] = 'Required'
    """
    Resolution specifies whether resolution of this reference is required.
    The default is 'Required', which means the reconcile will fail if the
    reference cannot be resolved. 'Optional' means this reference will be
    a no-op if it cannot be resolved.
    """
    resolve: Optional[Resolve] = None
    """
    Resolve specifies when this reference should be resolved. The default
    is 'IfNotPresent', which will attempt to resolve the reference only when
    the corresponding field is not present. Use 'Always' to resolve the
    reference on every reconcile.
    """


class BucketRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class BucketSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class EncryptionKeySecretRef(BaseModel):
    key: str
    """
    The key to select.
    """
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class CustomerEncryptionItem(BaseModel):
    encryptionAlgorithm: Optional[str] = None
    """
    Encryption algorithm. Default: AES256
    """
    encryptionKeySecretRef: EncryptionKeySecretRef
    """
    Base64 encoded Customer-Supplied Encryption Key.
    """


class RetentionItem(BaseModel):
    mode: Optional[str] = None
    """
    The retention policy mode. Either Locked or Unlocked.
    """
    retainUntilTime: Optional[str] = None
    """
    The time to retain the object until in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.
    """


class ForProvider(BaseModel):
    bucket: Optional[str] = None
    """
    The name of the containing bucket.
    """
    bucketRef: Optional[BucketRef] = None
    """
    Reference to a Bucket in storage to populate bucket.
    """
    bucketSelector: Optional[BucketSelector] = None
    """
    Selector for a Bucket in storage to populate bucket.
    """
    cacheControl: Optional[str] = None
    """
    Cache-Control
    directive to specify caching behavior of object data. If omitted and object is accessible to all anonymous users, the default will be public, max-age=3600
    """
    content: Optional[str] = None
    """
    Data as string to be uploaded. Must be defined if source is not. Note: The content field is marked as sensitive. To view the raw contents of the object, please define an output.
    """
    contentDisposition: Optional[str] = None
    """
    Content-Disposition of the object data.
    """
    contentEncoding: Optional[str] = None
    """
    Content-Encoding of the object data.
    """
    contentLanguage: Optional[str] = None
    """
    Content-Language of the object data.
    """
    contentType: Optional[str] = None
    """
    Content-Type of the object data. Defaults to "application/octet-stream" or "text/plain; charset=utf-8".
    """
    customerEncryption: Optional[List[CustomerEncryptionItem]] = None
    """
    Enables object encryption with Customer-Supplied Encryption Key (CSEK). [Google documentation about CSEK.](https://cloud.google.com/storage/docs/encryption/customer-supplied-keys)
    Structure is documented below.
    """
    detectMd5Hash: Optional[str] = None
    """
    MD5 hash of the data, encoded using base64. This field is not present for composite objects. For more information about using the MD5 hash, see Hashes and ETags: Best Practices.
    """
    eventBasedHold: Optional[bool] = None
    """
    Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any).
    """
    kmsKeyName: Optional[str] = None
    """
    The resource name of the Cloud KMS key that will be used to encrypt the object.
    """
    metadata: Optional[Dict[str, str]] = None
    """
    User-provided metadata, in key/value pairs.
    """
    name: Optional[str] = None
    """
    The name of the object. If you're interpolating the name of this object, see output_name instead.
    """
    retention: Optional[List[RetentionItem]] = None
    """
    The object retention settings for the object. The retention settings allow an object to be retained until a provided date. Structure is documented below.
    """
    source: Optional[str] = None
    """
    A path to the data you want to upload. Must be defined
    if content is not.
    """
    storageClass: Optional[str] = None
    """
    The StorageClass of the new bucket object.
    Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE. If not provided, this defaults to the bucket's default
    storage class or to a standard class.
    """
    temporaryHold: Optional[bool] = None
    """
    Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites.
    """


class CustomerEncryptionItemModel(BaseModel):
    encryptionAlgorithm: Optional[str] = None
    """
    Encryption algorithm. Default: AES256
    """


class InitProvider(BaseModel):
    bucket: Optional[str] = None
    """
    The name of the containing bucket.
    """
    bucketRef: Optional[BucketRef] = None
    """
    Reference to a Bucket in storage to populate bucket.
    """
    bucketSelector: Optional[BucketSelector] = None
    """
    Selector for a Bucket in storage to populate bucket.
    """
    cacheControl: Optional[str] = None
    """
    Cache-Control
    directive to specify caching behavior of object data. If omitted and object is accessible to all anonymous users, the default will be public, max-age=3600
    """
    content: Optional[str] = None
    """
    Data as string to be uploaded. Must be defined if source is not. Note: The content field is marked as sensitive. To view the raw contents of the object, please define an output.
    """
    contentDisposition: Optional[str] = None
    """
    Content-Disposition of the object data.
    """
    contentEncoding: Optional[str] = None
    """
    Content-Encoding of the object data.
    """
    contentLanguage: Optional[str] = None
    """
    Content-Language of the object data.
    """
    contentType: Optional[str] = None
    """
    Content-Type of the object data. Defaults to "application/octet-stream" or "text/plain; charset=utf-8".
    """
    customerEncryption: Optional[List[CustomerEncryptionItemModel]] = None
    """
    Enables object encryption with Customer-Supplied Encryption Key (CSEK). [Google documentation about CSEK.](https://cloud.google.com/storage/docs/encryption/customer-supplied-keys)
    Structure is documented below.
    """
    detectMd5Hash: Optional[str] = None
    """
    MD5 hash of the data, encoded using base64. This field is not present for composite objects. For more information about using the MD5 hash, see Hashes and ETags: Best Practices.
    """
    eventBasedHold: Optional[bool] = None
    """
    Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any).
    """
    kmsKeyName: Optional[str] = None
    """
    The resource name of the Cloud KMS key that will be used to encrypt the object.
    """
    metadata: Optional[Dict[str, str]] = None
    """
    User-provided metadata, in key/value pairs.
    """
    name: Optional[str] = None
    """
    The name of the object. If you're interpolating the name of this object, see output_name instead.
    """
    retention: Optional[List[RetentionItem]] = None
    """
    The object retention settings for the object. The retention settings allow an object to be retained until a provided date. Structure is documented below.
    """
    source: Optional[str] = None
    """
    A path to the data you want to upload. Must be defined
    if content is not.
    """
    storageClass: Optional[str] = None
    """
    The StorageClass of the new bucket object.
    Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE. If not provided, this defaults to the bucket's default
    storage class or to a standard class.
    """
    temporaryHold: Optional[bool] = None
    """
    Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites.
    """


class ManagementPolicy(Enum):
    Observe = 'Observe'
    Create = 'Create'
    Update = 'Update'
    Delete = 'Delete'
    LateInitialize = 'LateInitialize'
    field_ = '*'


class ProviderConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class Metadata(BaseModel):
    annotations: Optional[Dict[str, str]] = None
    """
    Annotations are the annotations to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.annotations".
    - It is up to Secret Store implementation for others store types.
    """
    labels: Optional[Dict[str, str]] = None
    """
    Labels are the labels/tags to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.labels".
    - It is up to Secret Store implementation for others store types.
    """
    type: Optional[str] = None
    """
    Type is the SecretType for the connection secret.
    - Only valid for Kubernetes Secret Stores.
    """


class PublishConnectionDetailsTo(BaseModel):
    configRef: Optional[ConfigRef] = Field(
        default_factory=lambda: ConfigRef.model_validate({'name': 'default'})
    )
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.
    """
    metadata: Optional[Metadata] = None
    """
    Metadata is the metadata for connection secret.
    """
    name: str
    """
    Name is the name of the connection secret.
    """


class WriteConnectionSecretToRef(BaseModel):
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class Spec(BaseModel):
    deletionPolicy: Optional[DeletionPolicy] = 'Delete'
    """
    DeletionPolicy specifies what will happen to the underlying external
    when this managed resource is deleted - either "Delete" or "Orphan" the
    external resource.
    This field is planned to be deprecated in favor of the ManagementPolicies
    field in a future release. Currently, both could be set independently and
    non-default values would be honored if the feature flag is enabled.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    """
    forProvider: ForProvider
    initProvider: Optional[InitProvider] = None
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.
    """
    managementPolicies: Optional[List[ManagementPolicy]] = ['*']
    """
    THIS IS A BETA FIELD. It is on by default but can be opted out
    through a Crossplane feature flag.
    ManagementPolicies specify the array of actions Crossplane is allowed to
    take on the managed and external resources.
    This field is planned to replace the DeletionPolicy field in a future
    release. Currently, both could be set independently and non-default
    values would be honored if the feature flag is enabled. If both are
    custom, the DeletionPolicy field will be ignored.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    """
    providerConfigRef: Optional[ProviderConfigRef] = Field(
        default_factory=lambda: ProviderConfigRef.model_validate({'name': 'default'})
    )
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.
    """
    publishConnectionDetailsTo: Optional[PublishConnectionDetailsTo] = None
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    """
    writeConnectionSecretToRef: Optional[WriteConnectionSecretToRef] = None
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.
    """


class AtProvider(BaseModel):
    bucket: Optional[str] = None
    """
    The name of the containing bucket.
    """
    cacheControl: Optional[str] = None
    """
    Cache-Control
    directive to specify caching behavior of object data. If omitted and object is accessible to all anonymous users, the default will be public, max-age=3600
    """
    content: Optional[str] = None
    """
    Data as string to be uploaded. Must be defined if source is not. Note: The content field is marked as sensitive. To view the raw contents of the object, please define an output.
    """
    contentDisposition: Optional[str] = None
    """
    Content-Disposition of the object data.
    """
    contentEncoding: Optional[str] = None
    """
    Content-Encoding of the object data.
    """
    contentLanguage: Optional[str] = None
    """
    Content-Language of the object data.
    """
    contentType: Optional[str] = None
    """
    Content-Type of the object data. Defaults to "application/octet-stream" or "text/plain; charset=utf-8".
    """
    crc32c: Optional[str] = None
    """
    (Computed) Base 64 CRC32 hash of the uploaded data.
    """
    customerEncryption: Optional[List[CustomerEncryptionItemModel]] = None
    """
    Enables object encryption with Customer-Supplied Encryption Key (CSEK). [Google documentation about CSEK.](https://cloud.google.com/storage/docs/encryption/customer-supplied-keys)
    Structure is documented below.
    """
    detectMd5Hash: Optional[str] = None
    """
    MD5 hash of the data, encoded using base64. This field is not present for composite objects. For more information about using the MD5 hash, see Hashes and ETags: Best Practices.
    """
    eventBasedHold: Optional[bool] = None
    """
    Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any).
    """
    id: Optional[str] = None
    kmsKeyName: Optional[str] = None
    """
    The resource name of the Cloud KMS key that will be used to encrypt the object.
    """
    md5hash: Optional[str] = None
    """
    (Computed) Base 64 MD5 hash of the uploaded data.
    """
    mediaLink: Optional[str] = None
    """
    (Computed) A url reference to download this object.
    """
    metadata: Optional[Dict[str, str]] = None
    """
    User-provided metadata, in key/value pairs.
    """
    name: Optional[str] = None
    """
    The name of the object. If you're interpolating the name of this object, see output_name instead.
    """
    outputName: Optional[str] = None
    """
    (Computed) The name of the object. Use this field in interpolations with google_storage_object_acl to recreate
    google_storage_object_acl resources when your google_storage_bucket_object is recreated.
    """
    retention: Optional[List[RetentionItem]] = None
    """
    The object retention settings for the object. The retention settings allow an object to be retained until a provided date. Structure is documented below.
    """
    selfLink: Optional[str] = None
    """
    (Computed) A url reference to this object.
    """
    source: Optional[str] = None
    """
    A path to the data you want to upload. Must be defined
    if content is not.
    """
    storageClass: Optional[str] = None
    """
    The StorageClass of the new bucket object.
    Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE. If not provided, this defaults to the bucket's default
    storage class or to a standard class.
    """
    temporaryHold: Optional[bool] = None
    """
    Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites.
    """


class Condition(BaseModel):
    lastTransitionTime: AwareDatetime
    """
    LastTransitionTime is the last time this condition transitioned from one
    status to another.
    """
    message: Optional[str] = None
    """
    A Message containing details about this condition's last transition from
    one status to another, if any.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration represents the .metadata.generation that the condition was set based upon.
    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
    with respect to the current state of the instance.
    """
    reason: str
    """
    A Reason for this condition's last transition from one status to another.
    """
    status: str
    """
    Status of this condition; is it currently True, False, or Unknown?
    """
    type: str
    """
    Type of this condition. At most one of each condition type may apply to
    a resource at any point in time.
    """


class Status(BaseModel):
    atProvider: Optional[AtProvider] = None
    conditions: Optional[List[Condition]] = None
    """
    Conditions of the resource.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration is the latest metadata.generation
    which resulted in either a ready state, or stalled due to error
    it can not recover from without human intervention.
    """


class BucketObject(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ObjectMeta] = None
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    """
    spec: Spec
    """
    BucketObjectSpec defines the desired state of BucketObject
    """
    status: Optional[Status] = None
    """
    BucketObjectStatus defines the observed state of BucketObject.
    """


class BucketObjectList(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    items: List[BucketObject]
    """
    List of bucketobjects. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ListMeta] = None
    """
    Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """